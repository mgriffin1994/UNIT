Code:

src/cocogan_train.py
-add the new div_dis_update method

src/trainers/cocogan_trainer.py
-remove _compute_kl methods in gen_update and add loss for divergence discriminator (from AVB paper)
--basically send shared variable through divergence discriminator and then through sigmoid, and then do cross entropy where the generator tries to trick that disc into believing it's real data
-add div_dis_update method to train the divergence discriminator (from AVB paper)
--similar to above but for disc loss, disc tries to make sigmoid(disc(shared)) not likely and sigmoid(unit variance normal noise) more likely

src/trainers/cocogan_nets.py
-remove GaussianNoiseLayer in COCOResGen (from middle shared layer)
-change forward in COCOResGen to take in 2 noise inputs
--concat 2 noises with images
-change architecture of COCOResGen slightly to accomodate these 2 noise inputs
--change first layer to take in concatted images and noises
-add new COCODivDis class for divergence discriminator architecture (from AVB paper)
--input size is shape of noise, basic FC net with one neuron output

Testing:

download dataset
generate results from both models

Propsal:
2-3 page paper about team, project plan, and intermediate project progress

Paper:
introduction to topic
talk about UNIT
talk about AVB
discuss our contribution
discuss our experiments
show results
conclusion